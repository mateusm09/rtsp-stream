name: Build and Deploy to Docker Hub

on:
    release:
        types: [published]
    pull_request:
        branches:
            - main
            - master

env:
    DOCKER_IMAGE: mellomateus/rtsp-stream
    REGISTRY: docker.io

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              if: github.event_name == 'release'
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.DOCKER_IMAGE }}
                  tags: |
                      type=ref,event=pr
                      type=raw,value=latest,enable=${{ github.event_name == 'release' }}
                      type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }}
                      type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }}
                      type=semver,pattern={{major}},enable=${{ github.event_name == 'release' }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  platforms: linux/amd64,linux/arm64
                  push: ${{ github.event_name == 'release' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Generate build summary
              if: github.event_name == 'release'
              run: |
                  echo "## ðŸš€ Docker Build Summary" >> $GITHUB_STEP_SUMMARY
                  echo "### Built Images:" >> $GITHUB_STEP_SUMMARY
                  echo "${{ steps.meta.outputs.tags }}" | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Registry: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
                  echo "### Repository: ${{ env.DOCKER_IMAGE }}" >> $GITHUB_STEP_SUMMARY
                  echo "### Platforms: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY

    security-scan:
        runs-on: ubuntu-latest
        needs: build
        if: github.event_name == 'release'

        steps:
            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: ${{ env.DOCKER_IMAGE }}:latest
                  format: sarif
                  output: trivy-results.sarif

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v2
              if: always()
              with:
                  sarif_file: trivy-results.sarif
